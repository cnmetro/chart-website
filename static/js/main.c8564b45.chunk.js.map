{"version":3,"sources":["assets/logo.svg","components/Home/Index.js","components/City/Index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","state","data","query","city","axios","get","concat","then","res","Promise","all","this","request","Object","toConsumableArray","Array","map","i","idx","format","subDays","startOfYesterday","arr","date","num","forEach","v","dataArr","_this2","lastThirtyDays","push","Shanghai","getDayNum","Beijing","Guangzhou","setState","reverse","_this3","requestAll","formatData","react_default","a","createElement","className","LineChart","width","height","margin","top","right","left","bottom","XAxis","dataKey","YAxis","CartesianGrid","strokeDasharray","Tooltip","Legend","Line","type","stroke","Component","COLOR_VAR","sh","bj","gz","City","name","sortedData","handleChange","event","_this","fetchData","target","value","props","match","params","nextProps","_this4","highest","lowest","length","onChange","App","location","url","pathname","HashRouter","href","src","logo","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","to","activeClassName","isActive","activeEvent","Route","exact","path","component","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,idCmFzBC,6MAzEbC,MAAQ,CACNC,KAAM,GACNC,MAAO,mFAGDA,EAAOC,GACb,OAAOC,IAAMC,IAAN,2CAAAC,OAAqDH,EAArD,KAAAG,OAA6DJ,IACjEK,KAAK,SAAAC,GAAG,OAAIA,EAAIP,0CAGVC,GACT,OAAOO,QAAQC,IAAI,CACjBC,KAAKC,QAAQV,EAAO,MACpBS,KAAKC,QAAQV,EAAO,MACpBS,KAAKC,QAAQV,EAAO,iDAKtB,OAAOW,OAAAC,EAAA,EAAAD,CAAI,IAAIE,MAAM,KAAKC,IAAI,SAACC,EAAGC,GAAJ,OAAYC,IAAOC,IAAQC,MAAoBH,GAAM,kDAG3EI,EAAKC,GACb,IAAIC,EAAM,EAKV,OAJAF,EAAIG,QAAQ,SAAAC,GACNA,EAAEH,OAASA,IAAMC,EAAME,EAAEF,OAGxBA,qCAGEG,GAAS,IAAAC,EAAAjB,KACZV,EAAO,GAEbU,KAAKkB,iBAAiBJ,QAAQ,SAAAF,GAC5BtB,EAAK6B,KAAK,CACRP,OACAQ,SAAYH,EAAKI,UAAUL,EAAQ,GAAG1B,KAAMsB,GAC5CU,QAAWL,EAAKI,UAAUL,EAAQ,GAAG1B,KAAMsB,GAC3CW,UAAaN,EAAKI,UAAUL,EAAQ,GAAG1B,KAAMsB,OAIjDZ,KAAKwB,SAAS,CACZlC,KAAMA,EAAKmC,wDAIK,IAAAC,EAAA1B,KAClBA,KAAK2B,WAAW3B,KAAKX,MAAME,OAAOK,KAAK,SAAAC,GACrC6B,EAAKE,WAAW/B,sCAKlB,OACEgC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWC,MAAO,IAAMC,OAAQ,IAAK7C,KAAMU,KAAKX,MAAMC,KACpD8C,OAAQ,CAAEC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAC/CX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOC,QAAQ,SACfb,EAAAC,EAAAC,cAACY,EAAA,EAAD,MACAd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAeC,gBAAgB,QAC/BhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,MACAjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,MACAlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,KAAK,WAAWP,QAAQ,WAAWQ,OAAO,YAChDrB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,KAAK,WAAWP,QAAQ,UAAUQ,OAAO,YAC/CrB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,KAAK,WAAWP,QAAQ,YAAYQ,OAAO,qBAnExCC,aCLbC,UAAY,CAChBC,GAAI,UACJC,GAAI,UACJC,GAAI,YAkFSC,6MA9EbnE,MAAQ,CACNoE,KAAM,GACNlE,MAAO,WACPD,KAAM,GACNoE,WAAY,MAGdC,aAAe,SAAAC,GACbC,EAAKC,UAAU,KAAMF,EAAMG,OAAOC,+EAG5BzE,EAAOkE,GACb,OAAOhE,IAAMC,IAAN,2CAAAC,OAAqD8D,EAArD,KAAA9D,OAA6DJ,IACjEK,KAAK,SAAAC,GAAG,OAAIA,EAAIP,mDAGD,IAAA2B,EAAAjB,KACVyD,EAASzD,KAAKiE,MAAMC,MAAMC,OAA1BV,KACRzD,KAAK8D,UAAUL,GACfzD,KAAKC,QAAQ,YAAawD,GACvB7D,KAAK,SAAAC,GACJoB,EAAKO,SAAS,CAAEkC,WAAY7D,EAAIP,2DAIZ8E,GAAW,IAAA1C,EAAA1B,KAC3ByD,EAASW,EAAUF,MAAMC,OAAzBV,KACJA,IAASzD,KAAKX,MAAMoE,OACxBzD,KAAK8D,UAAUL,GACfzD,KAAKC,QAAQ,YAAawD,GACvB7D,KAAK,SAAAC,GACJ6B,EAAKF,SAAS,CAAEkC,WAAY7D,EAAIP,4CAI5BmE,EAAMlE,GAAO,IAAA8E,EAAArE,KACrByD,EAAOA,GAAQzD,KAAKX,MAAMoE,KAC1BlE,EAAQA,GAASS,KAAKX,MAAME,MAC5BS,KAAKC,QAAQV,EAAOkE,GAAM7D,KAAK,SAAAN,GAC7B+E,EAAK7C,SAAS,CACZlC,KAAMA,EAAKA,KAAKmC,UAChBgC,OACAlE,6CAMJ,IAAM+E,EAAUtE,KAAKX,MAAMqE,WAAW,GAChCa,EAASvE,KAAKX,MAAMqE,WAAW1D,KAAKX,MAAMqE,WAAWc,OAAS,GACpE,OACE3C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2BAA2BgC,MAAOhE,KAAKX,MAAME,MAAOkF,SAAUzE,KAAK2D,cACnF9B,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,YAAd,oBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,sBAAd,SACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,aAAd,aACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,aAAd,aACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,aAAd,aACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,aAAd,aACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,aAAd,cAEFnC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWC,MAAO,IAAMC,OAAQ,IAAK7C,KAAMU,KAAKX,MAAMC,KACpD8C,OAAQ,CAAEC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAC/CX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOC,QAAQ,SACfb,EAAAC,EAAAC,cAACY,EAAA,EAAD,MACAd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAeC,gBAAgB,QAC/BhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,MACAjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,MACAlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,KAAK,WAAWP,QAAQ,MAAMQ,OAAQE,EAAUpD,KAAKX,MAAMoE,SAEnE5B,EAAAC,EAAAC,cAAA,WACEuC,GAAWzC,EAAAC,EAAAC,cAAA,wBAAgBuC,EAAQzD,IAAxB,OAAiCyD,EAAQ1D,MADtD,MACyE2D,GAAU1C,EAAAC,EAAAC,cAAA,uBAAewC,EAAO1D,IAAtB,OAA+B0D,EAAO3D,eAxE9GuC,wCCiCJuB,sLAnCDR,EAAOS,GACjB,QAAKT,IAEDA,EAAMU,MAAQD,EAASE,eAA3B,oCAIA,OACEhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,KACAjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAe+C,KAAK,KAC/BlD,EAAAC,EAAAC,cAAA,OAAKiD,IAAKC,IAAM/C,MAAM,KAAKC,OAAO,KAAKH,UAAU,2BAA2BkD,IAAI,UAElFrD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBiB,KAAK,SAASkC,cAAY,WAAWC,cAAY,sBAAsBC,gBAAc,qBAAqBC,gBAAc,QAAQC,aAAW,qBAC5K1D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BwD,GAAG,sBAC3C3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAASzD,UAAU,oBAAoB0D,GAAG,IAAIC,gBAAgB,SAASC,SAAU5F,KAAK6F,aAAtF,QACAhE,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAASzD,UAAU,oBAAoB0D,GAAG,WAAWC,gBAAgB,UAArE,YACA9D,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAASzD,UAAU,oBAAoB0D,GAAG,WAAWC,gBAAgB,UAArE,WACA9D,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAASzD,UAAU,oBAAoB0D,GAAG,WAAWC,gBAAgB,UAArE,gBAIN9D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAb,wBACAH,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7G,IACjCyC,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAWzC,aA7BjCL,aCKE+C,QACW,cAA7BC,OAAOxB,SAASyB,UAEe,UAA7BD,OAAOxB,SAASyB,UAEhBD,OAAOxB,SAASyB,SAASlC,MACvB,2DCZNmC,IAASC,OAAOzE,EAAAC,EAAAC,cAACwE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhH,KAAK,SAAAiH,GACjCA,EAAaC","file":"static/js/main.c8564b45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.cd5e6a7c.svg\";","import React, { Component } from 'react'\nimport axios from 'axios'\nimport startOfYesterday from 'date-fns/start_of_yesterday'\nimport subDays from 'date-fns/sub_days'\nimport format from 'date-fns/format'\nimport './Index.css'\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts'\n\n\nclass Home extends Component {\n  state = {\n    data: [],\n    query: 'count=30'\n  }\n\n  request(query, city) {\n    return axios.get(`http://metro.sinchang.me/api/flows?city=${city}&${query}`)\n      .then(res => res.data)\n  }\n\n  requestAll(query) {\n    return Promise.all([\n      this.request(query, 'sh'),\n      this.request(query, 'bj'),\n      this.request(query, 'gz')\n    ])\n  }\n\n  lastThirtyDays() {\n    return [...new Array(30)].map((i, idx) => format(subDays(startOfYesterday(), idx), 'YYYY-MM-DD'));\n  }\n\n  getDayNum(arr, date) {\n    let num = 0\n    arr.forEach(v => {\n      if (v.date === date) num = v.num\n    })\n\n    return num\n  }\n\n  formatData(dataArr) {\n    const data = []\n\n    this.lastThirtyDays().forEach(date => {\n      data.push({\n        date,\n        'Shanghai': this.getDayNum(dataArr[0].data, date),\n        'Beijing': this.getDayNum(dataArr[1].data, date),\n        'Guangzhou': this.getDayNum(dataArr[2].data, date)\n      })\n    })\n\n    this.setState({\n      data: data.reverse()\n    })\n  }\n\n  componentDidMount() {\n    this.requestAll(this.state.query).then(res => {\n      this.formatData(res)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"\">\n        <LineChart width={1000} height={500} data={this.state.data}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          <XAxis dataKey=\"date\" />\n          <YAxis />\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"Shanghai\" stroke=\"#8884d8\" />\n          <Line type=\"monotone\" dataKey=\"Beijing\" stroke=\"#82ca9d\" />\n          <Line type=\"monotone\" dataKey=\"Guangzhou\" stroke=\"#1281ca\" />\n        </LineChart>\n      </div>\n    )\n  }\n}\n\nexport default Home","import React, { Component } from 'react'\nimport axios from 'axios'\nimport './Index.css'\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts'\nconst COLOR_VAR = {\n  sh: '#8884d8',\n  bj: '#82ca9d',\n  gz: '#1281ca'\n}\n\nclass City extends Component {\n  state = {\n    name: '',\n    query: 'count=30',\n    data: [],\n    sortedData: []\n  }\n\n  handleChange = event => {\n    this.fetchData(null, event.target.value)\n  }\n\n  request(query, name) {\n    return axios.get(`http://metro.sinchang.me/api/flows?city=${name}&${query}`)\n      .then(res => res.data)\n  }\n\n  componentDidMount() {\n    const { name } = this.props.match.params\n    this.fetchData(name)\n    this.request('sort=desc', name)\n      .then(res => {\n        this.setState({ sortedData: res.data})\n      })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { name } = nextProps.match.params\n    if (name === this.state.name) return\n    this.fetchData(name)\n    this.request('sort=desc', name)\n      .then(res => {\n        this.setState({ sortedData: res.data})\n      })\n  }\n\n  fetchData(name, query) {\n    name = name || this.state.name\n    query = query || this.state.query\n    this.request(query, name).then(data => {\n      this.setState({\n        data: data.data.reverse(),\n        name,\n        query\n      })\n    })\n  }\n\n  render() {\n    const highest = this.state.sortedData[0]\n    const lowest = this.state.sortedData[this.state.sortedData.length - 1]\n    return (\n      <div>\n        <select className=\"form-control type-select\" value={this.state.query} onChange={this.handleChange}>\n          <option value=\"count=30\">The last 30 Days</option>\n          <option value=\"count=10&sort=desc\">Top10</option>\n          <option value=\"year=2019\">2019 Year</option>\n          <option value=\"year=2018\">2018 Year</option>\n          <option value=\"year=2017\">2017 Year</option>\n          <option value=\"year=2016\">2016 Year</option>\n          <option value=\"year=2015\">2015 Year</option>\n        </select>\n        <LineChart width={1000} height={500} data={this.state.data}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          <XAxis dataKey=\"date\" />\n          <YAxis />\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"num\" stroke={COLOR_VAR[this.state.name]} />\n        </LineChart>\n        <div>\n        { highest && <span>Highest: {highest.num} in {highest.date}</span> } | { lowest && <span>Lowest: {lowest.num} in {lowest.date}</span> }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default City\n","import React, { Component } from 'react'\nimport './App.css'\nimport logo from './assets/logo.svg'\nimport Home from './components/Home/Index'\nimport City from './components/City/Index'\nimport { HashRouter as Router, Route, NavLink } from 'react-router-dom'\n\nclass App extends Component {\n  activeEvent(match, location) {\n    if (!match) return false\n\n    if (match.url === location.pathname) return true\n  }\n\n  render() {\n    return (\n      <Router>\n      <div className=\"app\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a className=\"navbar-brand\" href=\"/\">\n            <img src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"logo\" />\n          </a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav\">\n              <NavLink className=\"nav-item nav-link\" to=\"/\" activeClassName=\"active\" isActive={this.activeEvent}>Home</NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/city/sh\" activeClassName=\"active\">Shanghai</NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/city/bj\" activeClassName=\"active\">Beijing</NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/city/gz\" activeClassName=\"active\">Guangzhou</NavLink>\n            </div>\n          </div>\n        </nav>\n        <p className=\"tip-text\">(unit: Ten thousand)</p>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/city/:name\" component={City} />\n      </div>\n      </Router>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}